spring:
  shardingsphere:
    datasource:
      names: ds-0,ds-1
      ds-0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
      ds-1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
    sharding:
      default-data-source-name: ds-0
      default-database-strategy:
        inline:
          sharding-column: user_id
          algorithm-expression: ds-$->{user_id % 2}
      tables:
        user_login_log:
          actual-data-nodes: ds-$->{0..1}.user_login_log_$->{0..1}
          table-strategy:
            inline:
              sharding-column: user_id
              algorithm-expression: user_login_log_$->{user_id % 2}
mybatis:
  type-aliases-package: com.doodl6.springboot.dao.entity
  mapper-locations: classpath*:mapper/*.xml
dubbo:
  scan:
      base-packages: com.doodl6.springboot.dubbo
  protocol:
    name: dubbo
    port: 20880
  consumer:
    filter: dubboTraceFilter
rocketmq:
  producer:
    group: chatRecordGroup
    clearUser:
      destination: clearUserData:*
    chatRecord:
      destination: ChatRecord:newChatRecord
    orderlyMessage:
      destination: OrderlyMessage:*
  consumer:
    clearUser:
      group: clearUserGroup
      topic: clearUserData
    chatRecord:
      group: chatRecordGroup
      topic: ChatRecord
    orderlyMessage:
      group: orderlyMessageGroup
      topic: OrderlyMessage
